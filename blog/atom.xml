<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CIAvash - Blog</title><link>https://www.ciavash.name/blog/</link><description>Recent content in Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>CIAvash</managingEditor><webMaster>CIAvash</webMaster><lastBuildDate>Tue, 16 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ciavash.name/blog/atom.xml" rel="self" type="application/rss+xml"/><item><title>An improved flycheck-raku now available on melpa [Emacs]</title><link>https://www.ciavash.name/blog/2021/03/16/improved-raku-flycheck-melpa-emacs/</link><pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2021/03/16/improved-raku-flycheck-melpa-emacs/</guid><description>&lt;p>Recently I forked the flycheck-raku (by @widefox) to the Raku GitHub organization.
And did some improvements to it and published it on &lt;a href="https://melpa.org/">melpa&lt;/a>, so others can easily install and update it.&lt;/p>
&lt;p>For those who don't know, &lt;a href="https://www.flycheck.org/">flycheck&lt;/a> is a tool for syntax checking Gnu Emacs buffers.&lt;/p>
&lt;p>You can install &lt;a href="https://github.com/Raku/flycheck-raku">flycheck-raku&lt;/a> using &lt;a href="https://github.com/jwiegley/use-package">use-package&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-elisp" data-lang="elisp">(&lt;span style="color:#ef8383">use-package&lt;/span> &lt;span style="color:#dcaeea">flychek-raku&lt;/span> &lt;span style="color:#ef8383">:ensure&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">t&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="new-features" class="heading">
&lt;a href="#new-features">
New features
&lt;/a>
&lt;/h2>&lt;h3 id="project-detection" class="heading">
&lt;a href="#project-detection">
Project detection
&lt;/a>
&lt;/h3>&lt;p>&lt;a href="https://www.ciavash.name/img/emacs-flycheck-raku-could-not-find-module.png">
&lt;img
src="https://www.ciavash.name/img/emacs-flycheck-raku-could-not-find-module.png"
alt="Emacs - flycheck-raku - bare say"
/>
&lt;/a>&lt;/p>
&lt;p>Previously if you used &lt;code>flycheck-raku&lt;/code> on a project, it would show errors on &lt;code>use SomeModule;&lt;/code>,
even though the module was in the &lt;code>lib&lt;/code> directory of the project. And this would make &lt;code>flycheck&lt;/code> kinda
useless, because it wouldn't show further errors.&lt;/p>
&lt;p>But in the new version of &lt;code>flycheck-raku&lt;/code>, project root is detected and its &lt;code>lib&lt;/code> directory is added to
include path. So no more errors on valid modules.&lt;/p>
&lt;h3 id="error-pattern-improvements" class="heading">
&lt;a href="#error-pattern-improvements">
Error pattern improvements
&lt;/a>
&lt;/h3>&lt;h4 id="full-error-messages" class="heading">
&lt;a href="#full-error-messages">
Full error messages
&lt;/a>
&lt;/h4>&lt;p>Previous versions of &lt;code>flycheck-raku&lt;/code> would cut some long error messages. Now, error messages are fully shown.&lt;/p>
&lt;h4 id="multi-line-error-messages" class="heading">
&lt;a href="#multi-line-error-messages">
Multi-line error messages
&lt;/a>
&lt;/h4>&lt;p>&lt;a href="https://www.ciavash.name/img/emacs-flycheck-raku-bare-say.png">
&lt;img
src="https://www.ciavash.name/img/emacs-flycheck-raku-bare-say.png"
alt="Emacs - flycheck-raku - bare say"
/>
&lt;/a>&lt;/p>
&lt;p>In the new version, multi-line error messages are fully shown.&lt;/p>
&lt;h4 id="potential-difficulties" class="heading">
&lt;a href="#potential-difficulties">
Potential difficulties
&lt;/a>
&lt;/h4>&lt;p>&lt;a href="https://www.ciavash.name/img/emacs-flycheck-raku-symbol-redclaration.png">
&lt;img
src="https://www.ciavash.name/img/emacs-flycheck-raku-symbol-redclaration.png"
alt="Emacs - flycheck-raku - symbol redclaration"
/>
&lt;/a>&lt;/p>
&lt;p>New version shows potential difficulties; I've only seen one such error message and that is &lt;code>Redclaration of symbol $x&lt;/code>.&lt;/p></description></item><item><title>MovieInfo - A web app for finding movie information and ratings</title><link>https://www.ciavash.name/blog/2016/10/16/movieinfo-web-app-for-finding-movie-information-ratings/</link><pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2016/10/16/movieinfo-web-app-for-finding-movie-information-ratings/</guid><description>&lt;p>I wanted to create something that makes it easy for me to see movie ratings.
I decided to create it as a SPA. In order to do so, I had to find a good framework.
I looked at a few well known frameworks, but did not like any of them!&lt;/p>
&lt;p>I was going to give up, but then I saw &lt;a href="http://elm-lang.org/">Elm&lt;/a>.
I had seen it being mentioned here and there, but I had never looked into it.
So I decided to give it a try and started reading the
&lt;a href="https://guide.elm-lang.org/">guide&lt;/a> and the &lt;a href="http://elm-lang.org/docs">docs&lt;/a>.
I liked what I saw, so I did a bit more reading before starting the project.&lt;/p>
&lt;h2 id="movieinfohttpsciavashgitlabiomovieinfo" class="heading">
&lt;a href="#movieinfohttpsciavashgitlabiomovieinfo">
&lt;a href="https://ciavash.gitlab.io/MovieInfo/">MovieInfo&lt;/a>
&lt;/a>
&lt;/h2>&lt;p>&lt;a href="https://www.ciavash.name/img/MovieInfo-title.jpg">
&lt;img
src="https://www.ciavash.name/img/MovieInfo-title.jpg"
alt="MovieInfo - screenshot of a title"
/>
&lt;/a>&lt;/p>
&lt;p>I wanted the project to be very simple and light, so I created a simple interface,
and used the &lt;a href="https://omdbapi.com/">OMDb API&lt;/a> to show the necessary information.&lt;/p>
&lt;p>In addition to ratings from IMDB, Rotten Tomatoes and Metacritic,
I added an overall rating, which is the average of those ratings.&lt;/p>
&lt;p>&lt;a href="https://ciavash.gitlab.io/MovieInfo/">MovieInfo&lt;/a> is released under GPLv3+
and its source code is available &lt;a href="https://gitlab.com/CIAvash/MovieInfo">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Update&lt;/strong>: I Recreated the app with &lt;a href="https://svelte.dev/">Svelte&lt;/a>: &lt;a href="https://movie-info.ciavash.name/">MovieInfo&lt;/a>&lt;/p></description></item><item><title>Get football information in your terminal with football</title><link>https://www.ciavash.name/blog/2016/05/12/get-soccer-information-in-your-terminal-with-football/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2016/05/12/get-soccer-information-in-your-terminal-with-football/</guid><description>&lt;p>&lt;a href="https://www.ciavash.name/img/football-leagues.png">
&lt;img
src="https://www.ciavash.name/img/football-leagues.png"
alt="Football Leagues"
/>
&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://gitlab.com/CIAvash/App-Football">App::Football&lt;/a> is a command line program I wrote in &lt;a href="https://raku-lang.ir/en">Raku&lt;/a>.
&lt;code>football&lt;/code> lets you access information regarding football(soccer!) teams, leagues, tables, fixtures, scores and players.&lt;/p>
&lt;p>It uses another module I wrote called &lt;a href="https://gitlab.com/CIAvash/WebService-FootballData">WebService::FootballData&lt;/a> which is a Raku interface for
&lt;a href="http://football-data.org">football-data.org&lt;/a> API.&lt;/p>
&lt;p>To install App::Football, you need to first install &lt;a href="https://raku-lang.ir/en/downloads/">Raku&lt;/a>
and &lt;a href="https://github.com/ugexe/zef">Zef&lt;/a>, then run:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">zef install App::Football
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;a href="https://gitlab.com/CIAvash/App-Football/blob/master/README.md">README&lt;/a> file has some useful examples,
but here are more examples and screenshots:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">football --team&lt;span style="color:#c7bf54">=&lt;/span>bayern --fixtures --timeframe&lt;span style="color:#c7bf54">=&lt;/span>p30 --venue&lt;span style="color:#c7bf54">=&lt;/span>away
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://www.ciavash.name/img/football-bayern-away-fixtures.png">
&lt;img
src="https://www.ciavash.name/img/football-bayern-away-fixtures.png"
alt="Football - Bayern away fixtures"
/>
&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">football --team&lt;span style="color:#c7bf54">=&lt;/span>mancity --players
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://www.ciavash.name/img/football-mancity-players.png">
&lt;img
src="https://www.ciavash.name/img/football-mancity-players.png"
alt="Football - Mancity players"
/>
&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">football --league&lt;span style="color:#c7bf54">=&lt;/span>pl --table --matchday&lt;span style="color:#c7bf54">=&lt;/span>&lt;span style="color:#d19a66">37&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://www.ciavash.name/img/football-pl-table-matchday-37.png">
&lt;img
src="https://www.ciavash.name/img/football-pl-table-matchday-37.png"
alt="Football - PL matchday 37 table"
/>
&lt;/a>&lt;/p></description></item><item><title>How to type Raku unicode characters in Emacs</title><link>https://www.ciavash.name/blog/2016/01/09/entering-raku-unicode-characters-in-emacs/</link><pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2016/01/09/entering-raku-unicode-characters-in-emacs/</guid><description>&lt;p>&lt;a href="https://raku.org/">Raku programming language&lt;/a> uses some unicode characters as operators, quotation marks, etc.
In this post I'm going to explain how to type those characters in Emacs using
&lt;a href="http://www.emacswiki.org/emacs/InputMethods">input methods&lt;/a>.&lt;/p>
&lt;p>First, you might want to see a list of those characters and their ASCII equivalents
&lt;a href="https://docs.raku.org/language/unicode_ascii">here&lt;/a>.
There is also a doc for &lt;a href="https://docs.raku.org/language/unicode_entry">entering unicode characters&lt;/a>.
You may specifically want to look at &lt;a href="https://en.wikipedia.org/wiki/Compose_key#GNU.2FLinux">XCompose&lt;/a> for a system-wide solution.&lt;/p>
&lt;p>There are at least two input methods you can use to enter the unicode characters used in Raku.
&lt;a href="https://tools.ietf.org/html/rfc1345">rfc1345&lt;/a> and &lt;a href="http://www.emacswiki.org/emacs/TeXInputMethod">TeX&lt;/a>.&lt;/p>
&lt;p>To select an input method type &lt;code>C-x RET C-\&lt;/code> and to switch to an input method use &lt;code>C-u C-\&lt;/code>.
&lt;code>C-\&lt;/code> can be used to toggle input method.&lt;/p>
&lt;p>After you select an input method, You have to use the prefix character it provides for typing special characters.
&lt;code>&amp;amp;&lt;/code> is the prefix used for rfc1345 and &lt;code>\&lt;/code>, &lt;code>^&lt;/code> and some other characters are used for TeX.&lt;/p>
&lt;p>Example for typing λ:&lt;/p>
&lt;p>rfc1345: &lt;code>&amp;amp;l*&lt;/code>&lt;/p>
&lt;p>TeX: &lt;code>\lambda&lt;/code>&lt;/p>
&lt;p>To see a list of character sequences for an input method, type &lt;code>C-h I&lt;/code>.&lt;/p>
&lt;p>You can change the default input method by setting the &lt;code>default-input-method&lt;/code> variable:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-elisp" data-lang="elisp">(&lt;span style="color:#ef8383">setq&lt;/span> &lt;span style="color:#dcaeea">default-input-method&lt;/span> &lt;span style="color:#56b6c2">&amp;#39;TeX&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To add characters which are not available in an input method:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-elisp" data-lang="elisp">(&lt;span style="color:#dcaeea">eval-after-load&lt;/span> &lt;span style="color:#98c379">&amp;#34;quail/latin-ltx&amp;#34;&lt;/span>
&lt;span style="color:#c7bf54">`&lt;/span>(&lt;span style="color:#ef8383">let&lt;/span> ((&lt;span style="color:#dcaeea">quail-current-package&lt;/span> (&lt;span style="color:#00b1f7">assoc&lt;/span> &lt;span style="color:#98c379">&amp;#34;TeX&amp;#34;&lt;/span> &lt;span style="color:#dcaeea">quail-package-alist&lt;/span>)))
(&lt;span style="color:#dcaeea">quail-define-rules&lt;/span> ((&lt;span style="color:#00b1f7">append&lt;/span> &lt;span style="color:#c7bf54">.&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">t&lt;/span>))
(&lt;span style="color:#98c379">&amp;#34;\\lcb&amp;#34;&lt;/span> &lt;span style="color:#98c379">?｢&lt;/span>)
(&lt;span style="color:#98c379">&amp;#34;\\rcb&amp;#34;&lt;/span> &lt;span style="color:#98c379">?｣&lt;/span>))))
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now with TeX method enabled, &lt;code>\lcb&lt;/code> types '｢' and &lt;code>\rcb&lt;/code> types '｣'.&lt;/p>
&lt;p>Same thing for the rfc1345 input method:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-elisp" data-lang="elisp">(&lt;span style="color:#dcaeea">eval-after-load&lt;/span> &lt;span style="color:#98c379">&amp;#34;quail/rfc1345&amp;#34;&lt;/span>
&lt;span style="color:#c7bf54">`&lt;/span>(&lt;span style="color:#ef8383">let&lt;/span> ((&lt;span style="color:#dcaeea">quail-current-package&lt;/span> (&lt;span style="color:#00b1f7">assoc&lt;/span> &lt;span style="color:#98c379">&amp;#34;rfc1345&amp;#34;&lt;/span> &lt;span style="color:#dcaeea">quail-package-alist&lt;/span>)))
(&lt;span style="color:#dcaeea">quail-define-rules&lt;/span> ((&lt;span style="color:#00b1f7">append&lt;/span> &lt;span style="color:#c7bf54">.&lt;/span> &lt;span style="color:#b756ff;font-weight:bold">t&lt;/span>))
(&lt;span style="color:#98c379">&amp;#34;&amp;amp;[&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;｢&amp;#34;&lt;/span>)
(&lt;span style="color:#98c379">&amp;#34;&amp;amp;]&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;｣&amp;#34;&lt;/span>))))
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now with the rfc1345 method you can type '｢' with &lt;code>&amp;amp;[&lt;/code> and type '｣' with &lt;code>&amp;amp;]&lt;/code>.&lt;/p>
&lt;p>Another way of entering unicode characters is using &lt;code>C-x 8 RET&lt;/code> which runs &lt;code>insert-char&lt;/code> command.
&lt;code>C-x 8&lt;/code> prefix key has shortcuts for some characters. For example, &lt;code>C-x 8 / /&lt;/code> inserts ÷. To add your own characters:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-elisp" data-lang="elisp">(&lt;span style="color:#dcaeea">global-set-key&lt;/span> (&lt;span style="color:#dcaeea">kbd&lt;/span> &lt;span style="color:#98c379">&amp;#34;C-x 8 l&amp;#34;&lt;/span>) &lt;span style="color:#98c379">&amp;#34;λ&amp;#34;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-elisp" data-lang="elisp">(&lt;span style="color:#dcaeea">global-set-key&lt;/span> (&lt;span style="color:#dcaeea">kbd&lt;/span> &lt;span style="color:#98c379">&amp;#34;C-x 8 l&amp;#34;&lt;/span>) (&lt;span style="color:#ef8383">lambda&lt;/span> () (&lt;span style="color:#ef8383">interactive&lt;/span>) (&lt;span style="color:#00b1f7">insert&lt;/span> &lt;span style="color:#98c379">&amp;#34;λ&amp;#34;&lt;/span>)))
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now &lt;code>C-x 8 l&lt;/code> inserts λ.&lt;/p>
&lt;p>Below is a list of unicode characters used in Raku and their character sequences in rfc1345 and TeX.&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: rfc1345 character mnemonics work in Vim too. You only need to replace &lt;code>&amp;amp;&lt;/code> with &lt;code>Ctrl-K&lt;/code>.&lt;/p>
&lt;table class="table">
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Character&lt;/th>
&lt;th style="text-align:center">C-x 8&lt;/th>
&lt;th style="text-align:center">rfc1345&lt;/th>
&lt;th style="text-align:center">TeX&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">«&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;lt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;&amp;lt;&amp;lt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\flqq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">»&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;gt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;&amp;gt;&amp;gt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\frqq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">×&lt;/td>
&lt;td style="text-align:center">&lt;code>x&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;*X&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\times&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">÷&lt;/td>
&lt;td style="text-align:center">&lt;code>/ /&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;-:&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\div&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">−&lt;/td>
&lt;td style="text-align:center">&lt;code>_ -&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;-2&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\minus&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">≤&lt;/td>
&lt;td style="text-align:center">&lt;code>_ &amp;lt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;=&amp;lt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\le&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">≥&lt;/td>
&lt;td style="text-align:center">&lt;code>_ &amp;gt;&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;&amp;gt;=&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\ge&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">≠&lt;/td>
&lt;td style="text-align:center">&lt;code>/ =&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;!=&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\ne&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∘&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;Ob&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\circ&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">≅&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;?=&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\cong&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">π&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;p*&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\pi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">τ&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;t*&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\tau&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∞&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;00&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\infty&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">…&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;.3&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\ldots&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">‘&lt;/td>
&lt;td style="text-align:center">&lt;code>[&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;'6&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\rq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">’&lt;/td>
&lt;td style="text-align:center">&lt;code>]&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;'9&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\lq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">‚&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;.9&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\glq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">“&lt;/td>
&lt;td style="text-align:center">&lt;code>{&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;&amp;quot;6&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\ldq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">”&lt;/td>
&lt;td style="text-align:center">&lt;code>}&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;&amp;quot;9&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\rdq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">„&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;:9&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\glqq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">¯&lt;/td>
&lt;td style="text-align:center">&lt;code>=&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;'m&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\={}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⁻&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;-S&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>^-&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⁺&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;+S&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>^+&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⁰ - ⁹&lt;/td>
&lt;td style="text-align:center">&lt;code>^ 1&lt;/code> - &lt;code>^ 3&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;0S&lt;/code> - &lt;code>&amp;amp;9S&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>^0&lt;/code> - &lt;code>^9&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">½&lt;/td>
&lt;td style="text-align:center">&lt;code>1 / 2&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;12&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\frac12&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∅&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;/0&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\emptyset&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∈&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;(-&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\in&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∉&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\notin&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∋&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;-)&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\ni&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊆&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;(_&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\subseteq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊈&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\nsubseteq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊂&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;(C&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\subset&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊄&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\nsubset&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊇&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;)_&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\supseteq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊉&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\nsupseteq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊃&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;(C&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\supset&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊅&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\nsupset&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∪&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;)U&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\cup&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∩&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;(U&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\cap&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">∖&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\setminus&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊖&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\ominus&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">⊎&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\uplus&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">≡&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>&amp;amp;=3&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>\equiv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">≢&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">&lt;code>\nequiv&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Magrent 1.0 released [Firefox]</title><link>https://www.ciavash.name/blog/2014/06/04/magrent-1-0-released/</link><pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2014/06/04/magrent-1-0-released/</guid><description>&lt;p>&lt;a href="https://www.ciavash.name/img/Magrent-Panel.png">
&lt;img
src="https://www.ciavash.name/img/Magrent-Panel.png"
alt="Magrent-Panel"
/>
&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/magrent/">Magrent&lt;/a> 1.0 adds context menu items to torrent info hash(when hash is selected) and The Pirate Bay torrent pages and links.&lt;/p>
&lt;p>&lt;a href="https://www.ciavash.name/img/Magrent-ContextMenu.png">
&lt;img
src="https://www.ciavash.name/img/Magrent-ContextMenu.png"
alt="Magrent-ContextMenu"
/>
&lt;/a>&lt;/p>
&lt;p>Changes in this version:&lt;/p>
&lt;ul>
&lt;li>Add support for The Pirate Bay torrent URLs and links&lt;/li>
&lt;li>Add context menu items for torrent info hashes&lt;/li>
&lt;li>New design for Magrent panel&lt;/li>
&lt;li>Use new action buttons(Australis) with backwards compatibility.&lt;/li>
&lt;li>New icon&lt;/li>
&lt;li>Notify user when torrent source is not accessible.&lt;/li>
&lt;li>Add torrent source name to the notification title&lt;/li>
&lt;/ul></description></item><item><title>Simple parser for C language</title><link>https://www.ciavash.name/blog/2013/07/02/simple-parser-for-c-language/</link><pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2013/07/02/simple-parser-for-c-language/</guid><description>&lt;p>For a long time I'v wanted to push my Parser project which was a university project for Principles of Compiler Design course to GitHub. Now I’v found the time to do it and you can download it &lt;a href="https://github.com/CIAvash/simple-c-parser/">here&lt;/a>.&lt;/p>
&lt;p>2 years ago I started learning Perl, soon Perl became my favourite programming language. It was then that our professor gave us the scanner project for C language. He told us that we can use the programming language of our choice. We were also allowed to use regular expressions. So I thought Perl is the best language for writing the project. In a month I read &lt;a href="http://en.wikipedia.org/wiki/Learning_Perl">Learning Perl&lt;/a> book and other necessary stuff and became ready to write the scanner. Scanner was my first Perl project. When I gave the project to professor, he said that I was the first person who has written the project in Perl :)&lt;/p>
&lt;p>After Scanner, professor gave us a simple C grammar for a parser project. I wrote that in Perl too. The result (with a little change) is &lt;a href="https://github.com/CIAvash/simple-c-parser/">here&lt;/a>.&lt;/p>
&lt;p>The used grammar exists in the documents directory. Along with other things that are produced from grammar: the LL(1) grammar after left factoring and left recursion removal, FIRST and FOLLOW sets and the parse table.&lt;/p>
&lt;p>Take a look at the README.md for its usage and some dummy C code for using in scanner and parser.&lt;/p>
&lt;p>Usage:&lt;/p>
&lt;p>scanner:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">./scanner.pl &lt;span style="color:#c7bf54">[&lt;/span>file_name&lt;span style="color:#c7bf54">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output: Symbol Table (tokens)&lt;/p>
&lt;p>parser:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">./parser.pl &lt;span style="color:#c7bf54">[&lt;/span>-s&lt;span style="color:#c7bf54">]&lt;/span> &lt;span style="color:#c7bf54">[&lt;/span>file_name&lt;span style="color:#c7bf54">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output: Table of parsing process&lt;/p>
&lt;p>With -s switch you can also see the scanner's output.&lt;/p>
&lt;p>&lt;a href="https://github.com/CIAvash/simple-c-parser/">Simple C Parser on GitHub&lt;/a>&lt;/p></description></item><item><title>Restoring GRUB with Arch linux live CD</title><link>https://www.ciavash.name/blog/2012/12/11/restoring-grub-with-arch-linux-live-cd/</link><pubDate>Tue, 11 Dec 2012 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2012/12/11/restoring-grub-with-arch-linux-live-cd/</guid><description>&lt;p>I had Arch linux on my computer and needed Windows for gaming; Windows installs its own boot loader, so I had to re-install grub. The following is what I did to restore grub.&lt;/p>
&lt;p>I suppose that you know what you're doing! For example you need to know in which partition linux is installed.&lt;/p>
&lt;p>Boot Arch linux from live CD.&lt;/p>
&lt;p>Create a directory for &lt;a href="https://wiki.archlinux.org/index.php/Change_Root">chroot&lt;/a> environment:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir /mnt/root
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mount the root partition and other necessary device and file systems:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mount /dev/sda1 /mnt/root
&lt;span style="color:#ef8383">cd&lt;/span> /mnt/root
mount -o &lt;span style="color:#ef8383">bind&lt;/span> /dev dev/
mount -t proc proc proc/
mount -t sysfs sys sys/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It seems that on newer Arch releases(2012), you can use &lt;code>arch-chroot /mnt/root&lt;/code> instead of the last 3 mount commands.&lt;/p>
&lt;p>If you have a separate partition for boot, mount it:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mount /dev/&lt;span style="color:#c7bf54">[&lt;/span>boot partition&lt;span style="color:#c7bf54">]&lt;/span> boot/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change the root:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">chroot .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can define another shell by adding it to the above command, like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">chroot . /bin/bash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generate grub.cfg file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">grub-mkconfig -o /boot/grub/grub.cfg
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install GRUB:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">grub-install /dev/sda
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exit the chroot environment:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#ef8383">exit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unmount filesystems and devices:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">umount &lt;span style="color:#c7bf54">{&lt;/span>dev,proc,sys,&lt;span style="color:#c7bf54">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unmount the root partition:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#ef8383">cd&lt;/span> ..
umount root
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And finally, you can reboot:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">reboot
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>My move from Ubuntu to Arch Linux</title><link>https://www.ciavash.name/blog/2012/11/12/move-from-ubuntu-to-arch-linux/</link><pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate><author>CIAvash</author><guid>https://www.ciavash.name/blog/2012/11/12/move-from-ubuntu-to-arch-linux/</guid><description>&lt;p>About a month ago I decided to try a new linux distribution. I was using Ubuntu and was even waiting for Ubuntu 12.10. I chose &lt;a href="https://www.archlinux.org/">Arch Linux&lt;/a> for testing, and Installed it on my netbook. I really liked the installation process! Then I chose &lt;a href="http://xfce.org/">Xfce&lt;/a> as Desktop Environment. After a few days I decided to move from Ubuntu to Arch Linux.&lt;/p>
&lt;p>When I read an article about a window manager, I was reminded of Tiling Window Managers so I decided to check window managers before moving. After some reading and comparing, I chose &lt;a href="http://xmonad.org/">xmonad&lt;/a> as my window manager.&lt;/p>
&lt;p>So I installed Arch Linux with xmonad. I spent a few days on installing softwares and configuring. You can see the result in the below picture.&lt;/p>
&lt;p>&lt;a href="https://www.ciavash.name/img/arch-linux-xmonad-CIAvash.png">
&lt;img
src="https://www.ciavash.name/img/arch-linux-xmonad-CIAvash.png"
alt="arch-linux-xmonad"
/>
&lt;/a>&lt;/p>
&lt;p>There is still a lot to learn about Arch Linux and xmonad, but I know enough to do the things I need to do.&lt;/p>
&lt;p>If you want to try Arch Linux, the &lt;a href="https://wiki.archlinux.org/index.php/Beginners%27_Guide">Beginners' Guide&lt;/a> is the best place to start.&lt;/p>
&lt;p>&lt;a href="http://www.haskell.org/haskellwiki/Xmonad/Config_archive/John_Goerzen%27s_Configuration">This guide&lt;/a> is a good start on configuring xmonad. Other useful links:&lt;/p>
&lt;p>&lt;a href="http://xmonad.org/tour.html">xmonad : a guided tour&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.haskell.org/haskellwiki/Xmonad/Config_archive">Xmonad/Config archive – HaskellWiki&lt;/a>&lt;/p>
&lt;p>Some of the Applications I use:(updated)&lt;/p>
&lt;ul>
&lt;li>Firefox&lt;/li>
&lt;li>Thunderbird&lt;/li>
&lt;li>GNU Emacs (text editor and more!)&lt;/li>
&lt;li>Guake (terminal)&lt;/li>
&lt;li>zsh (shell)&lt;/li>
&lt;li>tmux (terminal multiplexer)&lt;/li>
&lt;li>xmobar (status bar)&lt;/li>
&lt;li>dmenu (application launcher)&lt;/li>
&lt;li>dunst (notification daemon)&lt;/li>
&lt;li>Krusader, Dolphin (file manager)&lt;/li>
&lt;li>ncmpcpp (music player)&lt;/li>
&lt;li>mpv (media player)&lt;/li>
&lt;li>feh, ristretto (image viewer)&lt;/li>
&lt;li>scrot (screenshot)&lt;/li>
&lt;li>zathura (PDF viewer)&lt;/li>
&lt;li>Liferea (feed reader)&lt;/li>
&lt;li>syncthing, btsync, dropbox (sync, backup)&lt;/li>
&lt;/ul></description></item></channel></rss>